Resources:
  TestUserPool83C2ABD0:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 10
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      UserPoolName: MyAPIGWUserPool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TestUserPoolClient614A3920:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: TestUserPool83C2ABD0
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
        - COGNITO
  TestLambdaFunctionServiceRole0C9E0634:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  TestLambdaFunctionC089708A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "

          import json

          def handler(event, context):

          \    return {

          \        'statusCode': 200,

          \        'body': json.dumps({'message': 'Hello World'})

          \    }

          \                "
      Role:
        Fn::GetAtt:
          - TestLambdaFunctionServiceRole0C9E0634
          - Arn
      Architectures:
        - x86_64
      Description: Simple function to return Hello World message behind Cognito User Pool
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
      - TestLambdaFunctionServiceRole0C9E0634
  TestRESTAPI8B44974C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: REST API that uses Cognito user pool for authorization
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: TestRESTAPI
  TestRESTAPICloudWatchRole7E770B30:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  TestRESTAPIAccount27FE996D:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - TestRESTAPICloudWatchRole7E770B30
          - Arn
    DependsOn:
      - TestRESTAPI8B44974C
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  TestRESTAPIDeployment3030F942d92bcd0c69dcd9a57053a52ce7b600b0:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: TestRESTAPI8B44974C
      Description: REST API that uses Cognito user pool for authorization
    DependsOn:
      - TestRESTAPIhelloGET8F4E88E4
      - TestRESTAPIhello28B39926
  TestRESTAPIDeploymentStageprodB8C828BC:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: TestRESTAPI8B44974C
      DeploymentId:
        Ref: TestRESTAPIDeployment3030F942d92bcd0c69dcd9a57053a52ce7b600b0
      Description: Default stage for this API
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          MetricsEnabled: true
          ResourcePath: /*
      StageName: prod
    DependsOn:
      - TestRESTAPIAccount27FE996D
  TestRESTAPIhello28B39926:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - TestRESTAPI8B44974C
          - RootResourceId
      PathPart: hello
      RestApiId:
        Ref: TestRESTAPI8B44974C
  TestRESTAPIhelloGETApiPermissionMitLlCognitoStackTestRESTAPIC08B9A65GEThelloF94706D9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestLambdaFunctionC089708A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TestRESTAPI8B44974C
            - /
            - Ref: TestRESTAPIDeploymentStageprodB8C828BC
            - /GET/hello
  TestRESTAPIhelloGETApiPermissionTestMitLlCognitoStackTestRESTAPIC08B9A65GEThelloB24C84C7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestLambdaFunctionC089708A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: TestRESTAPI8B44974C
            - /test-invoke-stage/GET/hello
  TestRESTAPIhelloGET8F4E88E4:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: TestRESTAPIhello28B39926
      RestApiId:
        Ref: TestRESTAPI8B44974C
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: RESTAuthorizer69109D9A
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TestLambdaFunctionC089708A
                  - Arn
              - /invocations
  RESTAuthorizer69109D9A:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: MitLlCognitoStackRESTAuthorizerAD4CEACC
      RestApiId:
        Ref: TestRESTAPI8B44974C
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - Fn::GetAtt:
            - TestUserPool83C2ABD0
            - Arn
Outputs:
  TestRESTAPIEndpoint58441F3B:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: TestRESTAPI8B44974C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: TestRESTAPIDeploymentStageprodB8C828BC
          - /
  UserPoolClient:
    Description: The user pool application client ID
    Value:
      Ref: TestUserPoolClient614A3920
  UserPool:
    Description: The user pool ID
    Value:
      Ref: TestUserPool83C2ABD0
